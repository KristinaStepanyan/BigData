# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_division(*number):
    try:
      number1 = int(input('Введите делимое'))
      number2 = int(input('Введите делитель'))
      div = number1 / number2
    except ZeroDivisionError:
        return ('Деление на 0')
    return div
print(f'result  {my_division()}')

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год
# рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def my_per(name, **kwargs):
    print(name, kwargs)
my_per(name=input(), surname=input(), birth_year=input(), city=input(), email=input(), number=input())

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и
# возвращает сумму наибольших двух аргументов.


def my_func(x, y, z):
    if x >= y and y >= z or x > z and y >= z:
        return x + y
    elif x > y and x < z:
        return x + z

    else:
        return z + y
print(f'Result - {my_func(int(input("Введите первый аргумент ")), int(input("Введите второй аргумент ")), int(input("Введите третий аргумент ")))}')

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

# 1 способ:
def my_func(x, y):
    if x >= 0 and y < 0 and y / y == 1:
        return x ** y
    else:
        print(input('Введены неверные числа!'))
print(f'Result - {my_func(int(input("Введите первое число ")), int(input("Введите второе число ")))}')

# 2 способ:

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
# выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный
# символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно
# добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
#
def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input('Введите числа или Q для выхода - ').split()

        res = 0
        for i in range(len(number)):
            if number[i] == 'q' or number[i] == 'Q':
                ex = True
                break
            else:
                res = res + int(number[i])
        sum_res = sum_res + res
        print(f'Промежуточная сумма равна {sum_res}')
    print(f'Итоговая сумма равна {sum_res}')

my_sum()